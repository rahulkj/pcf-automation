#@data/values
---
env:
separate_config: False
pivnet_token: ((pivnet_token))
iaas: vsphere
stemcell_postfix: "-esxi-ubuntu-xenial-go_agent.tgz"
auth_configure_attempts: 3
apply_changes_attempts: 3
pipelines_clone_depth: 30

git:
  username: ((git_credentials.username))
  token: ((git_credentials.password))
  automation_git_url: https://github.com/rahulkj/pcf-automation
  automation_git_branch: master
  config_repo_git_url: https://github.com/rahulkj/secrets
  config_repo_git_branch: master
  locks_git_url: https://github.com/rahulkj/pipeline-locks
  locks_git_branch: master
  opsman_install_lock_folder: opsman-install-pipeline-lock
  opsman_upgrade_lock_folder: opsman-upgrade-pipeline-lock
  product_lock_folder: product-pipeline-lock

credhub:
  prefix: concourse/homelab
  ca_cert: ((credhub_server_ca.certificate))
  client: ((credhub_client))
  client_secret: ((credhub_client_secret))
  server: ((credhub_server))

smtp:
  enabled: False
  address: ((smtp_address))
  port: ((smtp_port))
  is_auth_required: true
  from_address: ((from_address))
  to_addresses: ((to_addresses))
  username: ((smtp_credentials.username))
  password: ((smtp_credentials.password))

s3:
  endpoint: http://((s3_endpoint))/
  access_key: ((s3_credentials.username))
  secret_key: ((s3_credentials.password))
  disable_ssl: true

configs:
  opsman_config_filename: opsman-config.yml
  director_config_filename: director-config.yml
  env_filename: env.yml
  state_file_destination: state-files

vars:
  folder: vars
  opsman_var_filename: opsman.yml
  opsman_auth_filename: opsman-auth.yml
  director_var_filename: director.yml

products:
- name: ops-manager
  metadata:
    has_stemcell: False
    deploy_product: False
    is_opsman: True
    is_platform_automation: False
    authentication: ldap            # possible values: internal|ldap|saml
  pivnet:
    slug: ops-manager
    glob: '*.ova'
    version: ^2\.9\.[0-9]*$
  s3:
    bucket: opsman
    backup_bucket: opsman-backup
    product_regex: "ops-manager-vsphere-(2.9.*).ova"
- name: pks
  metadata:
    has_stemcell: True
    deploy_product: True
    is_opsman: False
    is_platform_automation: False
    skip_apply_changes: False
    selective_apply_changes: "pivotal-container-service"
  pivnet:
    slug: pivotal-container-service
    glob: '*.pivotal'
    version: ^1\.8\..*$
    stemcell_version: "621.*"
    stemcell_os: "xenial"
  s3:
    bucket: pks  
    product_regex: "pivotal-container-service-(1.8.*).pivotal"
    stemcell_bucket: stemcells
- name: platform-automation-image
  metadata:
    has_stemcell: False
    deploy_product: False
    is_opsman: False
    is_platform_automation: True
  pivnet:
    slug: platform-automation
    glob: '*.tgz'
    version: ^4\.4\..*$
  s3:
    bucket: automation
    product_regex: image/platform-automation-image-(4.4.*).tgz
- name: platform-automation-tasks
  metadata:
    has_stemcell: False
    deploy_product: False
    is_opsman: False
    is_platform_automation: True
  pivnet:
    slug: platform-automation
    glob: '*.zip'
    version: ^4\.4\..*$
  s3:
    bucket: automation
    product_regex: tasks/platform-automation-tasks-(4.4.*).zip
- name: harbor
  metadata:
    has_stemcell: True
    deploy_product: True
    is_opsman: False
    is_platform_automation: False
    skip_apply_changes: False
    selective_apply_changes: "harbor-container-registry"
  pivnet:
    slug: harbor-container-registry
    glob: "*.pivotal"
    version: ^1\.10\.[0-9]*$
    stemcell_version: "456.*"
    stemcell_os: "xenial"
  s3:
    bucket: harbor
    stemcell_bucket: stemcells
    product_regex: "harbor-container-registry-(1.10.*).pivotal"
- name: nsx-t
  metadata:
    has_stemcell: False
    deploy_product: False
    is_opsman: False
    is_platform_automation: False
    skip_apply_changes: True
  pivnet:
    slug: vmware-nsx-t
    glob: 'VMware-NSX-T-*.pivotal'
    version: ^3\.0\.[0-9]*$
  s3:
    bucket: nsx-t
    product_regex: "VMware-NSX-T-(3.0.*).pivotal"
- name: pas
  metadata:
    has_stemcell: True
    deploy_product: False
    is_opsman: False
    is_platform_automation: False
    selective_apply_changes: "VMware-NSX-T,cf"
    skip_apply_changes: False
  pivnet:
    slug: elastic-runtime
    glob: 'cf-*.pivotal'
    version: ^2\.9\.[0-9]*$
    stemcell_version: "621.*"
    stemcell_os: "xenial"
  s3:
    bucket: pas
    stemcell_bucket: stemcells
    product_regex: "cf-(2.9.*).pivotal"
